
from pip import main
import pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
import webbrowser
import os
import smtplib


# sapi5 is Speech API provided by Microsoft and we will use it for take voices
engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')  # Getting Details of current voice
# print(voices[0].id)  # voice id helps us to select the  different voice
# voices[0].id --> Male Voice and voices[1].id --> FeMale Voice
engine.setProperty('voice', voices[1].id)


def speak(audio):

    engine.say(audio)  # engine will say this audio string
    engine.runAndWait()  # this function will make speech audible in the system,if this is not include then speech is not audible

# This is wish me function which is intro of application


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour >= 0 and hour <= 12:
        speak("Good Morning!")
    elif hour >= 12 and hour < 16:
        speak("Good Afternoon")
    else:
        speak("Good Evening!")

    speak("I am Echo, Please tell me how may I help you")

def sendEmail(to, content):
    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.ehlo()
    server.starttls()
    server.login("saurabhy7320@gmail.com", "your_password")
    server.sendmail("saurabhy7320@gmail.com", to, content)
    server.close()
# It takes microphone input from the user and returns string output

#Takecommand function will take the audio from Microphone and convert it into string
def takeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        # It will start searching the result after 1 second when you will stop speaking
        r.pause_threshold = 1
        audio = r.listen(source)

    # try is used for error handling
    try:
        print("Recognize...")
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}\n")

    except Exception as e:
        # We want to hide error generated by compiler  shown on console then we can comment this line
        # print(e)
        print("Say that again please...")
        return "None"
    return query


if __name__ == "__main__":
    wishMe()
    while True:
        query = takeCommand().lower()
        # speak("Hello everybody I am echo")

        # Logic for executing tasks based on query
        if 'wikipedia' in query:
            speak("Searching wikipedia...")
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            print(results)
            speak(results)

        elif 'who are you' in query:
            speak("I am Echo. And my language is python")
        
        elif 'gali' in query:
            speak("abe saale pagal hai kya?")
        
        elif 'open youtube' in query:
            webbrowser.open("youtube.com")

        elif 'open google' in query:
            webbrowser.open("google.com")

        elif 'open canva' in query:
            webbrowser.open("canva.com")

        elif "play friends" in query:
            friends_dir = 'D:\\F.R.I.E.N.D.S\\Season 01'
            frnd_lst = os.listdir(friends_dir)
            print(frnd_lst)
            os.startfile(os.path.join(friends_dir, frnd_lst[0]))

        elif 'play music' in query:
            music_dir = ''
            songs = os.listdir(music_dir)
            print(songs)    
            os.startfile(os.path.join(music_dir, songs[0]))

        elif "time" in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"Sir, the time is {strTime}")

        elif "vs code" in query:
            codePath = "C:\\Users\\SAURABH\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
            os.startfile(codePath)
        
        elif "send email to saurabh" in query:
            try:
                speak("What should I say?")
                content = takeCommand()
                to = "saurabh_mca7_73@dtu.ac.in"
                sendEmail(to, content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry my friend, due to some technical error I can't able to send email")